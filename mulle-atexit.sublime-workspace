{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"mulle_thread_m",
				"mulle_thread_mutex_lock\t(mulle-thread-pthreads.h)"
			],
			[
				"mulle_thread_mu",
				"mulle_thread_mutex_init\t(mulle-thread-pthreads.h)"
			],
			[
				"log",
				"log_verbose\t(mulle-parallel.sh)"
			],
			[
				"OPTION_S",
				"OPTION_STARTUP"
			],
			[
				"OPTI",
				"OPTION_LIBRARY_STYLE"
			],
			[
				"OPT",
				"OPTION_LIBRARY_STYLE"
			],
			[
				"con",
				"conftext"
			],
			[
				"NO",
				"NO_CMAKE_SYSTEM_PATH"
			],
			[
				"r_e",
				"r_escaped_shell_string"
			],
			[
				"r_esc",
				"r_escaped_shell_string"
			],
			[
				"cmk",
				"cmake_flags"
			],
			[
				"FOund",
				"Foundation"
			],
			[
				"max",
				"maxBufLen\tCFIndex maxBufLen"
			],
			[
				"OPTION_OUTP",
				"OPTION_OUTPUT_OMIT"
			],
			[
				"r_",
				"r_add_line"
			],
			[
				"CON",
				"CONFIGURATION"
			],
			[
				"with",
				"withrpath"
			],
			[
				"w",
				"withldpath"
			],
			[
				"MULLE",
				"MULLE_TEST_SERIAL"
			],
			[
				"mulle_",
				"mulle_stdlib_allocator"
			],
			[
				"log_w",
				"log_grep_warning_error\t(mulle-test-logging.sh)"
			],
			[
				"e",
				"excludes"
			],
			[
				"sdel_",
				"sde_list_files"
			],
			[
				"C_",
				"C_RESET_BOLD"
			],
			[
				"AF",
				"AFTERFILE"
			],
			[
				"WALK",
				"WALK_INDEX"
			],
			[
				"MULLE_",
				"MULLE_SDE_VAR_DIR"
			],
			[
				"walk_",
				"walk_dotdump_finished"
			],
			[
				"callk",
				"callbackqualifier"
			],
			[
				"desc",
				"descendqualifier"
			],
			[
				"MULLE_TEST_DIR",
				"MULLE_TEST_VAR_DIR"
			],
			[
				"add",
				"address-filename"
			],
			[
				"r",
				"remove_file_if_present"
			],
			[
				"r_co",
				"r_colon_concat"
			],
			[
				"u",
				"usr"
			],
			[
				"unpro",
				"unprotect_file_if_exists"
			],
			[
				"OPTION",
				"OPTION_PROTECT_SHARE"
			],
			[
				"OPTION_DO",
				"OPTION_DO_GIT_RELEASE"
			],
			[
				"MULLE_MATCH",
				"MULLE_MATCH_CLEAN_SH"
			],
			[
				"DEPE",
				"DEPENDENCY_DIR\t(mulle.sh)"
			],
			[
				"OPTIO",
				"OPTION_UPGRADE"
			],
			[
				"remove_",
				"remove_file_if_present"
			],
			[
				"int",
				"internal_fail"
			],
			[
				"MULLE_TESD",
				"MULLE_TEST_DIR"
			],
			[
				"MUL",
				"MULLE_VIRTUAL_ROOT=\"${physicaldir"
			],
			[
				"MIL",
				"MULLE_VIRTUAL_ROOT"
			],
			[
				"ex",
				"exekutor_print"
			],
			[
				"OPTION_XC",
				"OPTION_XCODE_ARCHS"
			],
			[
				"OO",
				"OPTION_STYLE"
			],
			[
				"DEF",
				"DEFAULT"
			],
			[
				"form",
				"formatstring"
			],
			[
				"r_get",
				"r_get_formatstring"
			],
			[
				"r_add",
				"r_nodemarks_add"
			],
			[
				"MULLE_CRA",
				"MULLE_CRAFT_SEARCH_SH\t(mulle-craft-search.sh)"
			],
			[
				"OPTION_PRO",
				"OPTION_PROJECT_NAME"
			],
			[
				"r_f",
				"r_fast_dirname"
			],
			[
				"raw",
				"raw_userinfo"
			],
			[
				"MULLE_SIO",
				"MULLE_SOURCETREE_LIBEXEC_DIR"
			],
			[
				"use",
				"usershare_dir"
			],
			[
				"MULLE_S",
				"MULLE_SOURCETREE_STASH_DIRNAME"
			],
			[
				"remove",
				"remove_file_if_present\t(mulle-sourcetree-cfg.sh)"
			],
			[
				"else",
				"endless"
			],
			[
				"MULLE_SOUR",
				"MULLE_SOURCETREE_STASH_DIR"
			],
			[
				"mkd",
				"mkdir\t(run-test)"
			],
			[
				"log_",
				"log_fluff"
			],
			[
				"SUB",
				"SUBPROJECT"
			],
			[
				"inte",
				"internal_fail"
			],
			[
				"MULLE_SOURC",
				"MULLE_SOURCETREE_TO_CMAKE_FLAGS\t(sourcetree-task.sh)"
			],
			[
				"MULLE_FL",
				"MULLE_FLAG_LOG_SETTINGS\t(mulle-monitor)"
			],
			[
				"MULLE_FLA",
				"MULLE_FLAG_LOG_TERSE\t(mulle-options.sh)"
			],
			[
				"crc",
				"crc_after"
			],
			[
				"eval",
				"eval_exekutor\t(mulle-sde-extension.sh)"
			],
			[
				"esc",
				"escaped_replace"
			],
			[
				"text",
				"text_hdr1"
			],
			[
				"patten",
				"patternfiles"
			],
			[
				"lof",
				"log_info"
			],
			[
				"C_RE",
				"C_RESET_BOLD\t(init-subproject)"
			],
			[
				"REPO",
				"REPOSFILE"
			],
			[
				"mulle-cmak",
				"mulle-cmake-graphviz-include\t(installer)"
			],
			[
				"mulle-c",
				"mulle-c-sourcetree-update\t(CMakeLists.txt)"
			],
			[
				"mulle-cm",
				"mulle-cmake-sourcetree-update\t(CMakeLists.txt)"
			],
			[
				"rm",
				"rmdir_if_empty"
			],
			[
				"CMake",
				"CMakeLists.txt"
			],
			[
				"MULLEV",
				"MULLE_VIRTUAL_ROOT"
			],
			[
				"sep",
				"seperator"
			],
			[
				"cr",
				"craftinfo"
			],
			[
				"r_fas",
				"r_fast_dirname"
			],
			[
				"defi",
				"definitions"
			],
			[
				"MULLE_SO",
				"MULLE_SOURCETREE_PROJECT_DIR"
			],
			[
				"MULLE_F",
				"MULLE_FLAG_LOG_VERBOSE\t(mulle-env-environment.sh)"
			],
			[
				"_sou",
				"_sourcetree_banner\t(mulle-sourcetree-list.sh)"
			],
			[
				"shar",
				"shared"
			],
			[
				"MULLE_FLAG",
				"MULLE_FLAG_LOG_VERBOSE\t(mulle-monitor-run.sh)"
			],
			[
				"rmi",
				"rmdir_safer\t(mulle-sde-clean.sh)"
			],
			[
				"colle",
				"collect_libraries"
			],
			[
				"whole",
				"wholearchiveformat\t(mulle-platform-translate.sh)"
			],
			[
				"whole-",
				"whole-archive-win"
			],
			[
				"wh",
				"wholearchiveformat"
			],
			[
				"OP",
				"OPTION_FORCE_LOAD"
			],
			[
				"C_F",
				"C_INFO\t(mulle-sde-test.sh)"
			],
			[
				"r_c",
				"r_c_commandline"
			],
			[
				"OTHE",
				"OTHER_CFLAGS\t(mulle-test-cmake.sh)"
			],
			[
				"DEFI",
				"DEFAULT_IFS"
			],
			[
				"exp",
				"expanded_dstfile"
			],
			[
				"b",
				"buildorder"
			],
			[
				"dire",
				"directory"
			],
			[
				"MULLE_FLAGS",
				"MULLE_FLAG_LOG_SCRIPTS\t(mulle-sde)"
			],
			[
				"wait",
				"wait_for_load_average"
			],
			[
				"MULLE_PA",
				"MULLE_PARALLEL_SH\t(mulle-parallel.sh)"
			],
			[
				"SHA",
				"SHARED_LIBRARY_LIST"
			],
			[
				"OPTION_IN",
				"OPTION_INIT_TYPE"
			],
			[
				"MULLE_PL",
				"MULLE_PLATFORM_SEARCH_SH"
			],
			[
				"OU",
				"OPTION_OUTPUT_FORMAT"
			],
			[
				"dependen",
				"dependency_libs"
			],
			[
				"libdi",
				"libdirnames"
			],
			[
				"_lib",
				"_libdirnames"
			],
			[
				"OPTION_SE",
				"OPTION_SEARCH_PATH"
			],
			[
				"OPTION_P",
				"OPTION_SEARCH_PATH"
			],
			[
				"rmdir_",
				"rmdir_if_empty"
			],
			[
				"r_abs",
				"r_simplified_absolutepath\t(mulle-path.sh)"
			],
			[
				"r_ab",
				"r_simplified_absolutepath\t(mulle-env)"
			],
			[
				"lo",
				"log_error"
			],
			[
				"MULLE_NI",
				"MULLE_MONITOR_DIR"
			],
			[
				"add_",
				"add_task_main"
			],
			[
				"MU",
				"MULLE_MONITOR_TRACE"
			],
			[
				"single",
				"single-dependency"
			],
			[
				"no",
				"no-require-header"
			],
			[
				"no-req",
				"no-require-link"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/mulle-atexit.c",
			"settings":
			{
				"buffer_size": 999,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/10_atexit/atexit.c",
			"settings":
			{
				"buffer_size": 236,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 364.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"packageres",
				"PackageResourceViewer: Open Resource"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"Jek",
				"Jekyll: Edit _config.yml"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"xm",
				"Indent XML"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Discover Packages"
			],
			[
				"",
				"Set Syntax: C++"
			]
		],
		"width": 470.0
	},
	"console":
	{
		"height": 429.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/src/srcO/mulle-concurrent/mulle-atexit",
		"/home/src/srcO/mulle-concurrent/mulle-atexit/src"
	],
	"file_history":
	[
		"/home/src/srcS/mulle-make/src/plugins/cmake.sh",
		"/Volumes/Source/srcS/mulle-fetch/src/mulle-fetch-git.sh",
		"/Volumes/Source/srcS/mulle-test/src/mulle-test-cmake.sh",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-definition.sh",
		"/Volumes/Source/srcS/mulle-test/src/mulle-test-run.sh",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-linkorder.sh",
		"/Volumes/Source/srcC/hdt_master/HDTApp/ReleaseNotes.txt",
		"/Volumes/Source/srcS/mulle-make/src/plugins/xcodebuild.sh",
		"/Volumes/Source/srcC/Dienstag/craftinfo/MulleScion/CMakeLists.txt",
		"/Volumes/Source/srcS/mulle-platform/src/mulle-platform-translate.sh",
		"/Volumes/Source/srcS/mulle-test/src/mulle-test-compiler.sh",
		"/Volumes/Source/srcS/mulle-make/src/mulle-make-definition.sh",
		"/Volumes/Source/srcS/mulle-make/src/mulle-make-build.sh",
		"/Volumes/Source/srcM/mulle-bashfunctions/src/mulle-file.sh",
		"/Volumes/Source/srcM/mulle-bashfunctions/src/mulle-string.sh",
		"/Volumes/Source/srcS/mulle-craft/src/mulle-craft-execute.sh",
		"/Volumes/Source/srcM/mulle-bashfunctions/src/mulle-case.sh",
		"/Volumes/Source/srcS/mulle-craft/src/mulle-craft-searchpath.sh",
		"/Volumes/Source/srcS/mulle-env/mulle-env",
		"/Volumes/Source/srcS/mulle-make/escape-hell/article/cmake-make/test",
		"/Volumes/Source/srcS/mulle-make/src/mulle-make-compiler.sh",
		"/Volumes/Source/srcS/mulle-make/src/mulle-make-common.sh",
		"/Volumes/Source/srcS/mulle-sde/mulle-sde",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-dependency.sh",
		"/Volumes/Source/srcS/mulle-sourcetree/src/mulle-sourcetree-nodemarks.sh",
		"/Volumes/Source/srcS/mulle-test/src/mulle-test-craft.sh",
		"/Volumes/Source/srcS/mulle-make/src/mulle-make-sdk.sh",
		"/Volumes/Source/srcS/mulle-make/src/plugins/meson.sh",
		"/Volumes/Source/srcS/mulle-sourcetree/src/mulle-sourcetree-node.sh",
		"/Volumes/Source/srcS/mulle-sourcetree/src/mulle-sourcetree-config.sh",
		"/Volumes/Source/srcS/mulle-test/src/mulle-test-execute.sh",
		"/Volumes/Source/srcM/MulleEOF/MulleEOAdaptor/REPOS",
		"/Volumes/Source/srcM/MulleEOF/REPOS",
		"/Volumes/Source/srcS/mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Environment.cmake",
		"/Volumes/Source/srcS/mulle-sourcetree/mulle-sourcetree-to-cmake",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-status.sh",
		"/Volumes/Source/srcS/mulle-dispense/src/mulle-dispense-copy.sh",
		"/Volumes/Source/srcS/mulle-sourcetree/src/mulle-sourcetree-status.sh",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-craft.sh",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-craftorder.sh",
		"/Volumes/Source/srcO/mulle-core/mulle-testallocator/src/pointerset.h",
		"/Volumes/Source/srcS/mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Library.cmake",
		"/Volumes/Source/srcS/mulle-make/src/plugins/cmake.sh",
		"/Volumes/Source/srcM/MulleEOF/MulleEOControl/REPOS",
		"/Volumes/Source/srcM/MulleEOF/MulleEOAccess/REPOS",
		"/home/src/srcO/stream-may-7-2019.md",
		"/home/mulle_kybernetik_tv/.config/sublime-text-3/Packages/Default/symbol.py",
		"/home/src/srcM/unitkit-fixes/CMakeLists.txt",
		"/home/src/srcM/MulleEOF/MulleEOAccess/MulleEOModel/test/EOAttributeRetainTest/CMakeLists.txt",
		"/home/src/srcM/unitkit-fixes/.mulle/var/.env/libexec/mulle-make/mulle-make-definition.sh",
		"/home/src/srcO/mulle-c/mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/FinalOutput.cmake",
		"/home/src/srcM/unitkit-fixes/.mulle/var/.env/libexec/mulle-make/plugins/xcodebuild.sh",
		"/tmp/uktest/CMakeLists.txt",
		"/home/src/srcM/unitkit-fixes/MULLE_OBJC.md",
		"/home/src/srcS/mulle-sde/src/mulle-sde-dependency.sh",
		"/home/src/srcM/mulle-bashfunctions/src/mulle-string.sh",
		"/home/src/srcS/mulle-make/src/mulle-make-definition.sh",
		"/home/src/srcM/unitkit-fixes/stash/mulle-utf/.mulle/var/.libexec/mulle-bashfunctions/1.10.0/mulle-string.sh",
		"/home/src/srcM/unitkit-fixes/stash/mulle-utf/.mulle/var/.libexec/mulle-make/mulle-make-definition.sh",
		"/home/src/srcM/unitkit-fixes/stash/mulle-utf/.mulle/var/.libexec/mulle-make/plugins/cmake.sh",
		"/home/src/srcM/unitkit-fixes/stash/mulle-utf/.mulle/var/.libexec/mulle-sde/mulle-sde-dependency.sh",
		"/home/src/srcS/mulle-make/escape-hell/article/cmake/CMakeLists.txt",
		"/home/src/srcS/mulle-make/escape-hell/article/cmake/test",
		"/home/src/srcS/mulle-make/src/mulle-make-common.sh",
		"/home/src/srcS/mulle-make/src/mulle-make-compiler.sh",
		"/home/src/srcS/mulle-make/escape-hell/article/picture.dot",
		"/Volumes/Source/srcM/mulle-bashfunctions/src/mulle-exekutor.sh",
		"/Volumes/Source/srcM/unitkit-fixes/Source/SharedLibrarySource/uk_handler_objc.m",
		"/Volumes/Source/srcS/mulle-env/src/mulle-env-environment.sh",
		"/Volumes/Source/srcS/mulle-make/escape-hell/escapeunescape",
		"/Volumes/Source/srcM/mulle-bashfunctions/test/13-escape/run-test",
		"/Volumes/Source/srcS/mulle-make/escape-hell/mymake",
		"/Volumes/Source/srcS/mulle-make/escape-hell/mymake.workd",
		"/Volumes/Source/srcS/mulle-make/escape-hell/article/cmake-make/CMakeLists.txt",
		"/Volumes/Source/srcM/mulle-bashfunctions/src/mulle-options.sh",
		"/Volumes/Source/srcS/mulle-make/mulle-make",
		"/Volumes/Source/srcM/mulle-bashfunctions/test/14-exekutor/run-test",
		"/Volumes/Source/srcS/mulle-make/escape-hell/article.md",
		"/private/tmp/foo/loop.sh",
		"/private/tmp/foo/mymake",
		"/Volumes/Source/srcM/mulle-bashfunctions/article.md",
		"/Volumes/Source/srcM/MulleEOF/MulleEOAdaptor/MulleSQLiteEOAdaptor/test/30_pk/compound/A.h",
		"/Volumes/Source/srcM/MulleEOF/MulleEOAdaptor/MulleSQLiteEOAdaptor/test/30_pk/compound/B.h",
		"/Volumes/Source/srcM/MulleEOF/MulleEOAdaptor/MulleSQLiteEOAdaptor/test/30_pk/compound/A.m",
		"/Volumes/Source/srcM/MulleEOF/MulleEOAdaptor/MulleSQLiteEOAdaptor/test/30_pk/compound/B.m",
		"/Volumes/Source/srcM/MulleEOF/MulleEOAdaptor/MulleSQLiteEOAdaptor/test/30_pk/compound/main.m",
		"/Volumes/Source/srcM/MulleEOF/MulleEOAdaptor/MulleSQLiteEOAdaptor/test/30_pk/compound/CMakeLists.txt",
		"/Volumes/Source/srcM/MulleEOF-Tests/README.md",
		"/Volumes/Users/nat/.bash_profile",
		"/Volumes/Users/nat/.bashrc",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-env/plugins/mulle.sh",
		"/Volumes/Source/srcS/mulle-project/src/mulle-homebrew.sh",
		"/Volumes/Source/srcO/JSONKit/cmake/Headers.cmake",
		"/Volumes/Source/srcO/JSONKit/cmake/_Headers.cmake",
		"/Volumes/Source/srcO/JSONKit/cmake/_Sources.cmake",
		"/Volumes/Source/srcO/JSONKit/cmake/share/Library.cmake",
		"/Volumes/Source/srcS/mulle-sourcetree/mulle-sourcetree-to-c",
		"/Volumes/Source/srcO/JSONKit/src/JSONKit.m",
		"/Volumes/Source/srcO/JSONKit/test/00_noleak/JKArray/test.m",
		"/Volumes/Source/srcO/JSONKit/test/00_noleak/JKSerializer/test.m",
		"/Volumes/Source/srcO/JSONKit/test/00_noleak/JKDictionaryEnumerator/test.m",
		"/Volumes/Source/srcO/JSONKit/test/00_noleak/JKDictionary/test.m",
		"/Volumes/Source/srcO/JSONKit/src/JSONKit.h",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-test.sh",
		"/Volumes/Source/srcO/mulle-objc/mulle-objc-developer/src/mulle-objc/objc-cmake/project/all/cmake/Headers.cmake",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-init.sh",
		"/Volumes/Source/srcS/mulle-sde/README.md",
		"/Volumes/Source/srcO/MulleFoundation/foundation-developer/src/foundation/legacy/tool.darwin",
		"/Volumes/Source/srcO/MulleFoundation/foundation-developer/src/foundation/legacy/tool",
		"/Volumes/Source/srcS/mulle-sde-developer/src/mulle-sde/sde/tool",
		"/Volumes/Source/srcS/mulle-sde-developer/src/mulle-sde/cmake/tool",
		"/Volumes/Source/srcS/mulle-sde-developer/src/mulle-sde/c/tool",
		"/Volumes/Source/srcM/mulle-xcode-to-cmake/CMakeLists.txt",
		"/Volumes/Source/srcS/mulle-platform/mulle-platform",
		"/Volumes/Source/srcO/MulleFoundation/foundation-developer/src/foundation/objc-cmake/project/all/cmake/share/EnvironmentAux.cmake",
		"/Volumes/Source/srcS/mulle-sourcetree/test/08-userinfo/run-test",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-common.sh",
		"/Volumes/Source/srcS/mulle-sourcetree/src/mulle-sourcetree-nodeline.sh",
		"/Volumes/Source/srcS/mulle-sde-developer/src/mulle-sde/cmake/share/monitor/libexec/sourcetree-task.sh",
		"/home/src/srcO/MulleFoundation/foundation-developer/src/foundation/objc/executable-libraries",
		"/home/src/srcO/MulleFoundation/foundation-developer/src/foundation/objc-developer/inherit",
		"/home/src/srcO/mulle-c/mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/StartupC.cmake",
		"/home/src/srcS/mulle-sde/src/mulle-sde-init.sh",
		"/home/src/srcO/mulle-c/mulle-c-developer/src/mulle-c/c-developer/inherit",
		"/home/src/srcS/mulle-sde-developer/src/mulle-sde/c-developer/inherit",
		"/home/src/srcO/mulle-objc/mulle-objc-developer/src/mulle-objc/objc-demo/demo/executable/PROJECT_SOURCE_DIR/main.PROJECT_EXTENSION",
		"/home/src/srcO/MulleFoundation/mulle-foundation-developer/src/mulle-foundation/objc-developer/inherit",
		"/home/src/srcO/mulle-objc/mulle-objc-developer/src/mulle-objc/objc-developer/inherit"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 158.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/mulle-atexit.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 999,
						"regions":
						{
						},
						"selection":
						[
							[
								590,
								590
							]
						],
						"settings":
						{
							"SL.55.region_keys":
							[
								"SL.clang.Highlights.|b4610bf9c6b827e99698b1e9db0313043fbd8d529b3a532e719c49580064a683|region.yellowish markup.warning.sublime_linter|32",
								"SL.clang.Highlights.|e4e46570de88d06a1c5f53d8a9fb67bb426a2784106239cc4f88d1d8b7db244e|region.yellowish markup.warning.sublime_linter|32",
								"SL.clang.Highlights.|11dffeccbce26592198294793edc96ac425df02493e966c8ffd518ca408e123d|region.redish markup.error.sublime_linter|32",
								"SL.clang.Gutter.|region.redish markup.error.sublime_linter|dot",
								"sublime_linter.protected_regions",
								"SL.clang.Highlights.|a3220ed06cdf11ae67c6f500284c0eed993ab36033aff47df422eb4a100b1883|region.yellowish markup.warning.sublime_linter|32",
								"SL.clang.Highlights.|45c397c8f9c08ca0eec73c0183c5ba02cf09e5c74e674bd5de9a321507547819|region.yellowish markup.warning.sublime_linter|32",
								"SL.clang.Highlights.|23a7950ff72365190aa0b45dcc5c3d09d351fca5521d07610d6f53fdb4f16c6f|region.yellowish markup.warning.sublime_linter|32",
								"SL.clang.Highlights.|fb815cc8d04ff51677ecdb96404fb30d1b4efd87612bbb404909c4ebbac4675d|region.redish markup.error.sublime_linter|32",
								"SL.clang.Highlights.|e9ff168f055829b722022d4c77c9039bf5a69b90ad4852403fd9f51d530d6968|region.yellowish markup.warning.sublime_linter|32",
								"SL.clang.Gutter.|region.yellowish markup.warning.sublime_linter|dot",
								"SL.clang.Highlights.|b2032926871a321bd5dbdc8685f310f81d8426a752436f7398d9ed8bff56b425|region.redish markup.error.sublime_linter|32"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tabs_extra_last_activated": 1558299001.15,
							"tabs_extra_last_activated_sheet_index": 0,
							"tabs_extra_spawned": true
						},
						"translation.x": 0.0,
						"translation.y": 990.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "test/10_atexit/atexit.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 236,
						"regions":
						{
						},
						"selection":
						[
							[
								16,
								16
							]
						],
						"settings":
						{
							"SL.56.region_keys":
							[
								"SL.clang.Highlights.|7abecea34f9a7063558233fb46b43456d425b394c183749ec326acc45f1afcef|region.redish markup.error.sublime_linter|32",
								"SL.clang.Gutter.|region.redish markup.error.sublime_linter|dot",
								"sublime_linter.protected_regions"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tabs_extra_last_activated": 1558299263.0,
							"tabs_extra_last_activated_sheet_index": 1,
							"tabs_extra_spawned": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 39.0
	},
	"input":
	{
		"height": 53.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 124.0
	},
	"pinned_build_system": "",
	"project": "mulle-atexit.sublime-project",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Envir",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Environment.cmake"
			],
			[
				"mulle-test-run",
				"mulle-test/src/mulle-test-run.sh"
			],
			[
				"mulle-soutce",
				"mulle-sourcetree/mulle-sourcetree-to-cmake"
			],
			[
				"mulle-sourcetree-to-cmake",
				"mulle-sourcetree/mulle-sourcetree-to-cmake"
			],
			[
				"tool",
				"mulle-sde-developer/src/mulle-sde/sde/tool"
			],
			[
				"Stan",
				"mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/StandaloneC.cmake"
			],
			[
				"version.h",
				"mulle-sde-developer/src/mulle-sde/c/demo/executable/PROJECT_SOURCE_DIR/version.h"
			],
			[
				"import",
				"foundation-developer/src/foundation/objc/project/all/PROJECT_SOURCE_DIR/import.h"
			],
			[
				"execu",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Executable.cmake"
			],
			[
				"optionaltool.da",
				"mulle-sde-developer/src/mulle-sde/c/optionaltool.darwin"
			],
			[
				"",
				"mulle-sde-developer/src/mulle-sde/sde/optionaltool"
			],
			[
				"Compi",
				"mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/CompilerFlagsC.cmake"
			],
			[
				"Environment",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Environment.cmake"
			],
			[
				"CompilerFlagsC.cmake",
				"mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/CompilerFlagsC.cmake"
			],
			[
				"optio",
				"mulle-sde-developer/src/mulle-sde/c/optionaltool.darwin"
			],
			[
				"linkorde",
				"mulle-sde/src/mulle-sde-linkorder.sh"
			],
			[
				"init-su",
				"mulle-sde-developer/src/mulle-sde/sde/init-subproject"
			],
			[
				"option",
				"mulle-sde-developer/src/mulle-sde/c/optionaltool.darwin"
			],
			[
				"optiona",
				"mulle-sde-developer/src/mulle-sde/sde/optionaltool.darwin"
			],
			[
				"optional",
				"mulle-sde-developer/src/mulle-sde/c/optionaltool"
			],
			[
				"opti",
				"mulle-sde-developer/src/mulle-sde/sde/optionaltool"
			],
			[
				"source-tas",
				"mulle-sde-developer/src/mulle-sde/cmake/share/monitor/libexec/source-task.sh"
			],
			[
				"cmakefile-",
				"mulle-sde-developer/src/mulle-sde/cmake/share/match/match.d/95-cmakefile--all"
			],
			[
				"mulle-cmake-source-update",
				"mulle-match/mulle-cmake-source-update"
			],
			[
				"Motd",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Motd.cmake"
			],
			[
				"-task.sh",
				"mulle-sde-developer/src/mulle-sde/c-cmake/share/monitor/libexec/cmake-sourcetree-update-task.sh"
			],
			[
				"source-c",
				"mulle-sde-developer/src/mulle-sde/cmake/share/monitor/bin/source-callback"
			],
			[
				"motd",
				"mulle-sde-developer/src/mulle-sde/sde/share/monitor/bin/create-build-motd"
			],
			[
				"-init",
				"mulle-sde/src/mulle-sde-init.sh"
			],
			[
				"mulle.sh",
				"mulle-sde/src/mulle-env/plugins/mulle.sh"
			],
			[
				"developer",
				"mulle-env/src/plugins/developer.sh"
			],
			[
				"c-so",
				"mulle-sde-developer/src/mulle-sde/c-cmake/share/monitor/bin/c-sourcetree-update"
			],
			[
				"create-build-motd",
				"mulle-sde-developer/src/mulle-sde/sde/share/sde/bin/create-build-motd"
			],
			[
				"0",
				"mulle-objc-developer/src/mulle-objc/objc/share/match.d/80-source--private-headers"
			],
			[
				"Frame",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Framework.cmake"
			],
			[
				"InstallExec",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/InstallExecutable.cmake"
			],
			[
				"InstallL",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/InstallLibrary.cmake"
			],
			[
				"Start",
				"mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/StartupC.cmake"
			],
			[
				"CMakeList",
				"mulle-sde-developer/src/mulle-sde/cmake/project/library/CMakeLists.txt"
			],
			[
				"Files",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Files.cmake"
			],
			[
				"Exec",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Executable.cmake"
			],
			[
				"cmake-sour",
				"mulle-sde-developer/src/mulle-sde/cmake/share/bin/cmake-sourcetree-update"
			],
			[
				"cmake-",
				"mulle-sde-developer/src/mulle-sde/cmake/share/bin/cmake-sourcetree-update"
			],
			[
				"sourcetree-update",
				"mulle-sde-developer/src/mulle-sde/cmake/share/bin/cmake-sourcetree-update"
			],
			[
				"private",
				"mulle-sde-developer/src/mulle-sde/c/share/match.d/80-source--private-headers"
			],
			[
				"Environment.",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Environment.cmake"
			],
			[
				"PreIn",
				"mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/PreInstall.cmake"
			],
			[
				"Environm",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Environment.cmake"
			],
			[
				"Environment.cmake",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Environment.cmake"
			],
			[
				"source-u",
				"mulle-sde-developer/src/mulle-sde/c-cmake/share/bin/c-sourcetree-update"
			],
			[
				"5",
				"/Volumes/Source/srcO/mulle-objc/mulle-objc-developer/src/mulle-objc/cmake/share/match.d/50-source--private-headers"
			],
			[
				"50",
				"mulle-objc-developer/src/mulle-objc/cmake/share/match.d/50-source--private-headers"
			],
			[
				"50-",
				"mulle-sde-developer/src/mulle-sde/c/share/match.d/50-source--private-headers"
			],
			[
				"00-",
				"mulle-objc-developer/.mulle-sde/share/ignore.d/00-directories--none"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 550.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"/home/src/srcS/mulle-sde/mulle-sde.sublime-project"
			],
			[
				"objc",
				"/Volumes/Source/srcO/mulle-objc/mulle-objc.sublime-project"
			],
			[
				"MulleObjC",
				"/home/src/srcO/mulle-objc/mulle-objc.sublime-project"
			],
			[
				"ashf",
				"/home/src/srcM/mulle-bashfunctions/mulle-bashfunctions.sublime-project"
			],
			[
				"look",
				"/home/src/srcO/mulle-objc-methodlookup/mulle-objc-methodlookup.sublime-project"
			],
			[
				"ounda",
				"/Volumes/Source/srcO/MulleFoundation/MulleFoundation.sublime-project"
			],
			[
				"MulleFou",
				"/home/src/srcO/MulleFoundation/MulleFoundation.sublime-project"
			],
			[
				"mulle-c",
				"/Volumes/Source/srcO/mulle-c/mulle-c.sublime-project"
			],
			[
				"test",
				"/Volumes/Source/srcM/mulle-test/mulle-test.sublime-project"
			]
		],
		"width": 418.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 584.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 359.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
